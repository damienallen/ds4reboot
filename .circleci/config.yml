version: 2
jobs:
  test:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run: cp "./.circleci/secret_settings.py" "./ds4reboot/secret_settings.py"
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            pip install --upgrade pip
            pip install --user -r requirements.txt
      - save_cache:
          paths:
            - ./
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python manage.py test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
  deploy:
    docker:
      - image: circleci/python:3.6.4
    working_directory: ~/srv/ds4reboot/
    steps:
#      - add_ssh_keys:
#          fingerprints:
#            - "cc:61:91:7a:32:93:c1:8e:00:ac:1b:96:07:7c:3a:c7"
      - run:
          name: Remote update venv.
          command: |
            ssh -vv $SSH_USER@$SSH_HOST -o "StrictHostKeyChecking no" 'cd ~/srv/ds4reboot/'
            ssh -vv $SSH_USER@$SSH_HOST -o "StrictHostKeyChecking no" '. venv/bin/activate'
            ssh -vv $SSH_USER@$SSH_HOST -o "StrictHostKeyChecking no" 'pip install -r requirements'
      - run:
          name: Checkout master
          command: |
            ssh -vv $SSH_USER@$SSH_HOST -o "StrictHostKeyChecking no" 'sudo git checkout master'
            ssh -vv $SSH_USER@$SSH_HOST -o "StrictHostKeyChecking no" 'sudo git pull'
      - run:
          name: Restart gunicorn
          command: |
            ssh -vv $SSH_USER@$SSH_HOST -o "StrictHostKeyChecking no" 'sudo service gunicorn restart'
workflows:
  version: 2
  deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master